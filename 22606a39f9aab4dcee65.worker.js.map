{"version":3,"sources":["../webpack/bootstrap","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js","robot/tic-tac-toe/UCT.ts","robot/tic-tac-toe/Board.ts","robot/tic-tac-toe/State.ts","robot/tic-tac-toe/Node.ts","robot/tic-tac-toe/Tree.ts","robot/tic-tac-toe/index.ts","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","robot/tic-tac-toe/CustomTicTacToe.ts","robot/tic-tac-toe/FullBoard.ts","worker.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","_arrayLikeToArray","arr","len","length","arr2","Array","_slicedToArray","isArray","iterator","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","err","minLen","toString","slice","constructor","from","test","TypeError","_classCallCheck","instance","Constructor","_defineProperties","target","props","descriptor","configurable","writable","_createClass","protoProps","staticProps","WinStatus","UCT","totalVisit","nodeWinScore","nodeVisit","Number","MAX_SAFE_INTEGER","Math","sqrt","log","node","children","Error","parentVisit","state","visitCount","childrenWithUCTValues","map","child","uctValue","winScore","reduce","maxNode","candidate","State","board","this","clone","possibleStates","getAvailableMoves","forEach","move","newState","performMove","availableMoves","randomMove","floor","random","score","MIN_SAFE_INTEGER","Node","args","parent","type","console","printBoard","print","Tree","root","MonteCarloTreeSearch","tree","nodeToStartFrom","find","isEqual","initialize","winStatus","thinkTime","opponent","getOpposedStatus","assignRootNode","rootNode","end","Date","valueOf","x","promisingNode","selectPromisingNode","checkStatus","IN_PROGRESS","expandNode","nodeToExplore","getRandomChildNode","playoutResult","simulateRandomPlayout","backPropogation","winnerNode","getChildWithMaxScore","findBestNodeWithUCT","getAllPossibleStates","newNode","tempNode","tempState","boardStatus","randomPlay","incrementVisitCount","getLatestPlayerToMove","addScore","WIN_SCORE","_defineProperty","obj","ownKeys","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","apply","_objectSpread2","arguments","source","getOwnPropertyDescriptors","defineProperties","winningBoards","CustomTicTacToeBoard","presence","color","lastPerformedMove","printEachMove","copy","fill","_","index","number","playerOneToMove","bitMask","some","PLAYER_X","PLAYER_O","DRAW","status","row","j","player","join","newBoard","FullBoard","currentBoard","boards","every","innerBoard","idx","exportBoard","getAvailableMovesForOuterGrid","innerMove","boardToCheck","outerMove","updatePresenceAndColor","getRows","winners","acc","playerO","playerX","g","getPrintedRows","a","b","res","exportedBoard","importBoard","mcst","onmessage","e","_e$data","data","nextBoard","findNextMove","postMessage","addEventListener","f","ref","method","id","params","__webpack_exports__","Promise","resolve","then","reject","result","catch","error","message","stack"],"mappings":"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","file":"22606a39f9aab4dcee65.worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/robot-tic-tac-toe/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","import { Node } from \"./Node\";\n\nexport class UCT {\n  static uctValue(totalVisit: number, nodeWinScore: number, nodeVisit: number) {\n    if (nodeVisit === 0) {\n      return Number.MAX_SAFE_INTEGER;\n    }\n\n    return (\n      nodeWinScore / nodeVisit +\n      1.41 * Math.sqrt(Math.log(totalVisit) / nodeVisit)\n    );\n  }\n\n  static findBestNodeWithUCT(node: Node): Node {\n    if (node.children.length === 0)\n      throw new Error(\"Node can not have 0 children\");\n\n    const parentVisit = node.state.visitCount;\n\n    const childrenWithUCTValues = node.children.map(child => ({\n      node: child,\n      value: this.uctValue(\n        parentVisit,\n        child.state.winScore,\n        child.state.visitCount\n      )\n    }));\n\n    const max = childrenWithUCTValues.reduce((maxNode, candidate) => {\n      if (maxNode.value > candidate.value) return maxNode;\n      return candidate;\n    }, childrenWithUCTValues[0]);\n\n    return max.node;\n  }\n}\n","export interface Board {\n  clone(): Board;\n  getAvailableMoves(): Array<number>;\n  getPlayerToMove(): WinStatus;\n  getLatestPlayerToMove(): WinStatus;\n  getOpposedStatus(status: WinStatus): WinStatus;\n  performMove(move: number): void;\n  checkStatus(): WinStatus;\n  printBoard(): void;\n  isEqual(board: any): boolean;\n}\n\nexport enum WinStatus {\n  IN_PROGRESS = \"IN_PROGRESS\",\n  DRAW = \"DRAW\",\n  PLAYER_X = \"PLAYER_X\",\n  PLAYER_O = \"PLAYER_O\",\n}\n","import { Board } from \"./Board\";\n\nexport class State {\n    // @ts-ignore\n  board: Board;\n  visitCount: number = 0;\n  winScore: number = 0;\n\n  constructor(state?: State) {\n    if (state) {\n      this.board = state.board.clone();\n      this.visitCount = state.visitCount;\n      this.winScore = state.winScore;\n    }\n  }\n\n  getAllPossibleStates() {\n    const possibleStates: Array<State> = [];\n    const availableMoves = this.board.getAvailableMoves();\n\n    availableMoves.forEach(move => {\n      const newState = new State(this);\n\n      newState.board.performMove(move);\n      newState.visitCount = 0;\n      possibleStates.push(newState);\n    });\n    return possibleStates;\n  }\n\n  incrementVisitCount() {\n    this.visitCount++;\n  }\n\n  randomPlay() {\n    const availableMoves = this.board.getAvailableMoves();\n    const randomMove =\n      availableMoves[Math.floor(Math.random() * availableMoves.length)];\n    this.board.performMove(randomMove);\n  }\n\n  addScore(score: number): void {\n    if (this.winScore !== Number.MIN_SAFE_INTEGER) {\n      this.winScore += score;\n    }\n  }\n}\n","import { State } from \"./State\";\n\ntype Arguments =\n  | {\n      type: \"empty\";\n    }\n  | {\n      type: \"state\";\n      state: State;\n    }\n  | {\n      type: \"state-parent-children\";\n      state: State;\n      parent: Node;\n      children: Array<Node>;\n    }\n  | {\n      type: \"node\";\n      node: Node;\n    };\n\nexport class Node {\n  state: State;\n  children: Array<Node>;\n    // @ts-ignore\n  parent: Node;\n\n  constructor(args: Arguments) {\n    switch (args.type) {\n      case \"empty\": {\n        this.state = new State();\n        this.children = [];\n        break;\n      }\n      case \"state\": {\n        this.state = args.state;\n        this.children = [];\n        break;\n      }\n      case \"state-parent-children\": {\n        this.state = args.state;\n        this.parent = args.parent;\n        this.children = args.children;\n        break;\n      }\n      case \"node\": {\n        const { node } = args;\n\n        this.children = [];\n        this.state = new State(node.state);\n\n        if (node.parent) {\n          this.parent = node.parent;\n        }\n\n        node.children.forEach(child => {\n          this.children.push(new Node({ type: \"node\", node: child }));\n        });\n        break;\n      }\n    }\n  }\n\n  getRandomChildNode() {\n    return this.children[Math.floor(Math.random() * this.children.length)];\n  }\n\n  getChildWithMaxScore(): Node {\n    return this.children.reduce((maxNode, candidate) => {\n      if (maxNode.state.visitCount > candidate.state.visitCount) return maxNode;\n      return candidate;\n    }, this.children[0]);\n  }\n\n  print() {\n    console.log(\"---------------------------------------------------\");\n    console.log(\n      `count: ${this.state.visitCount} score: ${this.state.winScore}`\n    );\n    this.state.board.printBoard();\n    console.log(\"-------------------children------------------------\");\n    this.children.forEach(child => child.print());\n    console.log(\"---------------------------------------------------\");\n    console.log();\n  }\n}\n","import { Node } from \"./Node\";\n\nexport class Tree {\n  root: Node;\n\n  constructor() {\n    this.root = new Node({ type: \"empty\" });\n  }\n}\n","import { UCT } from \"./UCT\";\nimport { WinStatus, Board } from \"./Board\";\nimport { Node } from \"./Node\";\nimport { Tree } from \"./Tree\";\n\nexport class MonteCarloTreeSearch {\n  static readonly WIN_SCORE: number = 10;\n  private tree: Tree;\n\n  constructor() {\n    this.tree = new Tree();\n  }\n\n  private initialize(board: Board) {\n    this.tree = new Tree();\n    this.tree.root.state.board = board.clone();\n  }\n\n  private assignRootNode(board: Board) {\n    const nodeToStartFrom = this.tree.root.children.find((child) =>\n      child.state?.board.isEqual(board)\n    );\n    console.log(\"found valid node\");\n\n    if (nodeToStartFrom) this.tree.root = nodeToStartFrom;\n    else this.initialize(board);\n  }\n\n  findNextMove(board: Board, winStatus: WinStatus, thinkTime: number) {\n    const opponent = board.getOpposedStatus(winStatus);\n\n    this.assignRootNode(board);\n\n    const rootNode = this.tree.root;\n\n    const end = new Date().valueOf() + thinkTime;\n    let x = 0;\n    while (new Date().valueOf() < end) {\n      x++;\n      // selection\n      const promisingNode = this.selectPromisingNode(rootNode);\n      // expansion\n      if (promisingNode.state.board.checkStatus() === WinStatus.IN_PROGRESS) {\n        this.expandNode(promisingNode);\n      }\n\n      // simulation\n      let nodeToExplore = promisingNode;\n      if (promisingNode.children.length > 0) {\n        nodeToExplore = promisingNode.getRandomChildNode();\n      }\n\n      const playoutResult = this.simulateRandomPlayout(nodeToExplore, opponent);\n\n      // update\n      this.backPropogation(nodeToExplore, playoutResult);\n    }\n\n    console.log(`ran ${x} iterations`);\n    const winnerNode = rootNode.getChildWithMaxScore();\n    this.tree.root = winnerNode;\n    return winnerNode.state.board;\n  }\n\n  private selectPromisingNode(rootNode: Node): Node {\n    let node = rootNode;\n    while (node.children.length !== 0) {\n      node = UCT.findBestNodeWithUCT(node);\n    }\n    return node;\n  }\n\n  private expandNode(node: Node): void {\n    const possibleStates = node.state.getAllPossibleStates();\n    possibleStates.forEach((state) => {\n      const newNode = new Node({ type: \"state\", state });\n      newNode.parent = node;\n      node.children.push(newNode);\n    });\n  }\n\n  private simulateRandomPlayout(node: Node, opponent: WinStatus) {\n    const tempNode = new Node({ type: \"node\", node });\n    const tempState = tempNode.state;\n    let boardStatus = tempState.board.checkStatus();\n\n    if (boardStatus === opponent) {\n      tempNode.parent.state.winScore = Number.MIN_SAFE_INTEGER;\n      return boardStatus;\n    }\n\n    while (boardStatus === WinStatus.IN_PROGRESS) {\n      tempState.randomPlay();\n      boardStatus = tempState.board.checkStatus();\n    }\n\n    return boardStatus;\n  }\n\n  private backPropogation(nodeToExplore: Node, playoutResult: WinStatus) {\n    let tempNode = nodeToExplore;\n\n    while (tempNode) {\n      tempNode.state.incrementVisitCount();\n      if (tempNode.state.board.getLatestPlayerToMove() === playoutResult) {\n        tempNode.state.addScore(MonteCarloTreeSearch.WIN_SCORE);\n      }\n      tempNode = tempNode.parent;\n    }\n  }\n}\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import { WinStatus } from \"./Board\";\n\nconst winningBoards: Array<number> = [\n  0b111000000,\n  0b000111000,\n  0b000000111,\n  0b100100100,\n  0b010010010,\n  0b001001001,\n  0b100010001,\n  0b001010100,\n];\n\ninterface ExportedBoard {\n  presence: number;\n  color: number;\n}\nexport class CustomTicTacToeBoard {\n  presence: number = 0;\n  color: number = 0;\n  lastPerformedMove: WinStatus | null = null;\n  printEachMove: boolean = false;\n\n  clone() {\n    const copy = new CustomTicTacToeBoard();\n    copy.presence = this.presence;\n    copy.color = this.color;\n    copy.lastPerformedMove = this.lastPerformedMove;\n    return copy;\n  }\n\n  isEqual(board: CustomTicTacToeBoard) {\n    return board.presence === this.presence && board.color === this.color;\n  }\n\n  static importBoard(board: ExportedBoard) {\n    const newBoard = new CustomTicTacToeBoard();\n    newBoard.presence = board.presence;\n    newBoard.color = board.color;\n    return newBoard;\n  }\n\n  exportBoard(): ExportedBoard {\n    return {\n      presence: this.presence,\n      color: this.color,\n    };\n  }\n\n  getAvailableMoves(): Array<number> {\n    if (this.checkStatus() !== WinStatus.IN_PROGRESS) return [];\n\n    return new Array(9)\n      .fill(undefined)\n      .map((_, index) => index)\n      .filter((number) => {\n        const bitMask = 2 ** number;\n        return (bitMask & this.presence) === 0;\n      });\n  }\n\n  performMove(move: number, playerOneToMove: boolean) {\n    const bitMask = 2 ** move;\n\n    this.presence = this.presence | bitMask;\n    if (playerOneToMove) {\n      this.color = this.color | bitMask;\n    }\n  }\n\n  checkStatus() {\n    if (\n      winningBoards.some(\n        (board) => (this.presence & board & this.color) === board\n      )\n    )\n      return WinStatus.PLAYER_X;\n\n    if (\n      winningBoards.some(\n        (board) => (this.presence & board & ~this.color) === board\n      )\n    )\n      return WinStatus.PLAYER_O;\n\n    if (this.presence === 0b111111111) return WinStatus.DRAW;\n    return WinStatus.IN_PROGRESS;\n  }\n\n  getOpposedStatus(status: WinStatus) {\n    if (status === WinStatus.PLAYER_O) return WinStatus.PLAYER_X;\n    return WinStatus.PLAYER_O;\n  }\n\n  getRows() {\n    return new Array(9)\n      .fill(undefined)\n      .map((_, index) => index)\n      .map((number) => {\n        const bitMask = 2 ** number;\n        if ((bitMask & this.presence) === 0) return \"empty\";\n        else if ((bitMask & this.presence & this.color) === 0) return \"player2\";\n        return \"player1\";\n      });\n  }\n\n  getPrintedRows(): string[] {\n    const board = [];\n\n    for (let i = 0; i < 3; i++) {\n      const row = [];\n\n      for (let j = 0; j < 3; j++) {\n        const move = i * 3 + j;\n        if ((2 ** move) & this.presence) {\n          const player = (2 ** move) & this.color;\n          row.push(player ? \"x\" : \"o\");\n        } else row.push(\" \");\n      }\n      board.push(`| ${row.join(\" \")} |`);\n    }\n\n    return board;\n  }\n}\n","import { Board, WinStatus } from \"./Board\";\nimport { CustomTicTacToeBoard } from \"./CustomTicTacToe\";\n\nconst winningBoards: Array<number> = [\n  0b111000000,\n  0b000111000,\n  0b000000111,\n  0b100100100,\n  0b010010010,\n  0b001001001,\n  0b100010001,\n  0b001010100,\n];\n\ninterface ExportedBoard {\n  color: number;\n  presence: number;\n  currentBoard: number | null;\n  boards: Array<{ presence: number; color: number }>;\n  playerOneToMove: boolean;\n}\nexport class FullBoard implements Board {\n  printEachMove: boolean = false;\n  currentBoard: number | null = null;\n  presence: number = 0;\n  color: number = 0;\n  playerOneToMove: boolean = true;\n  boards: Array<CustomTicTacToeBoard> = [];\n\n  constructor() {\n    for (let i = 0; i < 9; i++) {\n      this.boards.push(new CustomTicTacToeBoard());\n    }\n  }\n\n  clone() {\n    const copy = new FullBoard();\n    copy.currentBoard = this.currentBoard;\n    copy.presence = this.presence;\n    copy.color = this.color;\n    copy.playerOneToMove = this.playerOneToMove;\n    copy.boards = this.boards.map((board) => board.clone());\n    return copy;\n  }\n\n  isEqual(board: FullBoard) {\n    return (\n      this.color === board.color &&\n      this.presence === board.presence &&\n      this.currentBoard === board.currentBoard &&\n      this.playerOneToMove === board.playerOneToMove &&\n      this.boards.every((innerBoard, idx) =>\n        innerBoard.isEqual(board.boards[idx])\n      )\n    );\n  }\n\n  static importBoard(exportedBoard: ExportedBoard) {\n    const newBoard = new FullBoard();\n    newBoard.color = exportedBoard.color;\n    newBoard.presence = exportedBoard.presence;\n    newBoard.currentBoard = exportedBoard.currentBoard;\n    newBoard.boards = exportedBoard.boards.map((board) =>\n      CustomTicTacToeBoard.importBoard(board)\n    );\n    newBoard.playerOneToMove = exportedBoard.playerOneToMove;\n    return newBoard;\n  }\n\n  exportBoard(): ExportedBoard {\n    return {\n      color: this.color,\n      presence: this.presence,\n      currentBoard: this.currentBoard,\n      boards: this.boards.map((board) => board.exportBoard()),\n      playerOneToMove: this.playerOneToMove,\n    };\n  }\n\n  private getAvailableMovesForOuterGrid() {\n    return new Array(9)\n      .fill(undefined)\n      .map((_, index) => index)\n      .filter((number) => {\n        const bitMask = 2 ** number;\n        return (bitMask & this.presence) === 0;\n      });\n  }\n\n  getAvailableMoves() {\n    // if there is a selected board\n    if (this.currentBoard !== null)\n      return this.boards[this.currentBoard].getAvailableMoves();\n\n    const availableMoves: Array<number> = [];\n    this.getAvailableMovesForOuterGrid().forEach((move) => {\n      const board = this.boards[move];\n      if (board.checkStatus() === WinStatus.IN_PROGRESS) {\n        board.getAvailableMoves().forEach((innerMove) => {\n          availableMoves.push(move * 10 + innerMove + 10);\n        });\n      }\n    });\n\n    return availableMoves;\n  }\n\n  getPlayerToMove() {\n    return this.playerOneToMove ? WinStatus.PLAYER_X : WinStatus.PLAYER_O;\n  }\n\n  getLatestPlayerToMove() {\n    return this.playerOneToMove ? WinStatus.PLAYER_O : WinStatus.PLAYER_X;\n  }\n\n  private updatePresenceAndColor(boardToCheck: number) {\n    const board = this.boards[boardToCheck];\n\n    const status = board.checkStatus();\n    // lets do nothing for draws for the moment and see how it works out\n    if (status !== WinStatus.IN_PROGRESS && status !== WinStatus.DRAW) {\n      const bitMask = 2 ** boardToCheck;\n      this.presence = this.presence | bitMask;\n\n      if (status === WinStatus.PLAYER_X) {\n        this.color = this.color | bitMask;\n      }\n    }\n  }\n\n  performMove(move: number) {\n    const outerMove = move < 9 ? this.currentBoard : Math.floor(move / 10) - 1;\n    const innerMove = move < 9 ? move : move % 10;\n\n    // @ts-ignore\n    this.boards[outerMove].performMove(innerMove, this.playerOneToMove);\n\n    const statusOfNextBoard = this.boards[innerMove].checkStatus();\n\n    if (statusOfNextBoard === WinStatus.IN_PROGRESS)\n      this.currentBoard = innerMove;\n    else {\n      this.currentBoard = null;\n    }\n\n    // @ts-ignore\n    this.updatePresenceAndColor(outerMove);\n\n    this.playerOneToMove = !this.playerOneToMove;\n\n    if (this.printEachMove) this.printBoard();\n  }\n\n  getBoards() {\n    return this.boards.map((board) => board.getRows());\n  }\n\n  checkStatus() {\n    if (\n      winningBoards.some(\n        (board) => (this.presence & board & this.color) === board\n      )\n    )\n      return WinStatus.PLAYER_X;\n\n    if (\n      winningBoards.some(\n        (board) => (this.presence & board & ~this.color) === board\n      )\n    )\n      return WinStatus.PLAYER_O;\n\n    if (this.getAvailableMoves().length === 0) {\n      const winners = this.boards.reduce(\n        (acc, board) => {\n          if (board.checkStatus() === WinStatus.PLAYER_O)\n            return { ...acc, playerO: acc.playerO + 1 };\n          if (board.checkStatus() === WinStatus.PLAYER_X)\n            return { ...acc, playerX: acc.playerX + 1 };\n          return acc;\n        },\n        { playerO: 0, playerX: 0 }\n      );\n      if (winners.playerO > winners.playerX) return WinStatus.PLAYER_O;\n      if (winners.playerX > winners.playerO) return WinStatus.PLAYER_X;\n      return WinStatus.DRAW;\n    }\n    return WinStatus.IN_PROGRESS;\n  }\n\n  getOpposedStatus(status: WinStatus) {\n    if (status === WinStatus.PLAYER_O) return WinStatus.PLAYER_X;\n    return WinStatus.PLAYER_O;\n  }\n  printBoard() {\n    const board = [];\n    for (let i = 0; i < 3; i++) {\n      const row: string[][] = [[], [], []];\n      for (let j = 0; j < 3; j++) {\n        const g = i * 3 + j;\n        const [a, b, c] = this.boards[g].getPrintedRows();\n\n        row[0].push(a);\n        row[1].push(b);\n        row[2].push(c);\n      }\n      const res = row.map((x) => x.join(\"    \")).join(\"\\n\");\n      board.push(res);\n    }\n    console.log(\n      `\nGame status: ${this.checkStatus()} -- Current square: ${\n        this.currentBoard !== null ? this.currentBoard + 1 : \"None\"\n      }\n\n${board.join(\"\\n\\n\")}\n`\n    );\n  }\n}\n","import _slicedToArray from\"F:\\\\Programming\\\\Private\\\\2020-04\\\\robot-tic-tac-toe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import{MonteCarloTreeSearch}from\"./robot/tic-tac-toe\";import{FullBoard}from\"./robot/tic-tac-toe/FullBoard\";var mcst=new MonteCarloTreeSearch();onmessage=function onmessage(e){var _e$data=_slicedToArray(e.data,3),exportedBoard=_e$data[0],winStatus=_e$data[1],thinkTime=_e$data[2];var board=FullBoard.importBoard(exportedBoard);var nextBoard=mcst.findNextMove(board,winStatus,thinkTime);// @ts-ignore\npostMessage(nextBoard.exportBoard());};\naddEventListener('message', function (e) {var ref = e.data;var type = ref.type;var method = ref.method;var id = ref.id;var params = ref.params;var f,p;if (type === 'RPC' && method) {if (f = __webpack_exports__[method]) {p = Promise.resolve().then(function () { return f.apply(__webpack_exports__, params); });} else {p = Promise.reject('No such method');}p.then(function (result) {postMessage({type: 'RPC',id: id,result: result});}).catch(function (e) {var error = {message: e};if (e.stack) {error.message = e.message;error.stack = e.stack;error.name = e.name;}postMessage({type: 'RPC',id: id,error: error});});}});postMessage({type: 'RPC',method: 'ready'});"],"sourceRoot":""}